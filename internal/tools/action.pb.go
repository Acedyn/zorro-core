// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: tools/action.proto

package tools

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An action can be composed of different types of tools
// They are linked together via the upstream key
type ActionChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The child can be of different types of tools
	//
	// Types that are assignable to Child:
	//
	//	*ActionChild_Command
	//	*ActionChild_Action
	Child isActionChild_Child `protobuf_oneof:"child"`
	// Defines the dependency of this action child
	Upstream []string `protobuf:"bytes,3,rep,name=upstream,proto3" json:"upstream,omitempty"`
}

func (x *ActionChild) Reset() {
	*x = ActionChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionChild) ProtoMessage() {}

func (x *ActionChild) ProtoReflect() protoreflect.Message {
	mi := &file_tools_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionChild.ProtoReflect.Descriptor instead.
func (*ActionChild) Descriptor() ([]byte, []int) {
	return file_tools_action_proto_rawDescGZIP(), []int{0}
}

func (m *ActionChild) GetChild() isActionChild_Child {
	if m != nil {
		return m.Child
	}
	return nil
}

func (x *ActionChild) GetCommand() *Command {
	if x, ok := x.GetChild().(*ActionChild_Command); ok {
		return x.Command
	}
	return nil
}

func (x *ActionChild) GetAction() *Action {
	if x, ok := x.GetChild().(*ActionChild_Action); ok {
		return x.Action
	}
	return nil
}

func (x *ActionChild) GetUpstream() []string {
	if x != nil {
		return x.Upstream
	}
	return nil
}

type isActionChild_Child interface {
	isActionChild_Child()
}

type ActionChild_Command struct {
	Command *Command `protobuf:"bytes,1,opt,name=command,proto3,oneof"`
}

type ActionChild_Action struct {
	Action *Action `protobuf:"bytes,2,opt,name=action,proto3,oneof"`
}

func (*ActionChild_Command) isActionChild_Child() {}

func (*ActionChild_Action) isActionChild_Child() {}

// An action holds groups of subactions and commands.
// It allows to chain and organize multiple commands into a dependency graph
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All tools are composed of this field that contains required infos
	Base *ToolBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// The children form like a sub graph
	Children map[string]*ActionChild `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_tools_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_tools_action_proto_rawDescGZIP(), []int{1}
}

func (x *Action) GetBase() *ToolBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Action) GetChildren() map[string]*ActionChild {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_tools_action_proto protoreflect.FileDescriptor

var file_tools_action_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x1a, 0x10, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x27,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0xb7, 0x01, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x54, 0x6f,
	0x6f, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x1a, 0x4f, 0x0a, 0x0d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x63, 0x65, 0x64, 0x79, 0x6e, 0x2f, 0x7a, 0x6f, 0x72, 0x72,
	0x6f, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tools_action_proto_rawDescOnce sync.Once
	file_tools_action_proto_rawDescData = file_tools_action_proto_rawDesc
)

func file_tools_action_proto_rawDescGZIP() []byte {
	file_tools_action_proto_rawDescOnce.Do(func() {
		file_tools_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_tools_action_proto_rawDescData)
	})
	return file_tools_action_proto_rawDescData
}

var file_tools_action_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tools_action_proto_goTypes = []interface{}{
	(*ActionChild)(nil), // 0: zorro.ActionChild
	(*Action)(nil),      // 1: zorro.Action
	nil,                 // 2: zorro.Action.ChildrenEntry
	(*Command)(nil),     // 3: zorro.Command
	(*ToolBase)(nil),    // 4: zorro.ToolBase
}
var file_tools_action_proto_depIdxs = []int32{
	3, // 0: zorro.ActionChild.command:type_name -> zorro.Command
	1, // 1: zorro.ActionChild.action:type_name -> zorro.Action
	4, // 2: zorro.Action.base:type_name -> zorro.ToolBase
	2, // 3: zorro.Action.children:type_name -> zorro.Action.ChildrenEntry
	0, // 4: zorro.Action.ChildrenEntry.value:type_name -> zorro.ActionChild
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_tools_action_proto_init() }
func file_tools_action_proto_init() {
	if File_tools_action_proto != nil {
		return
	}
	file_tools_tool_proto_init()
	file_tools_command_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tools_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tools_action_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ActionChild_Command)(nil),
		(*ActionChild_Action)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tools_action_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tools_action_proto_goTypes,
		DependencyIndexes: file_tools_action_proto_depIdxs,
		MessageInfos:      file_tools_action_proto_msgTypes,
	}.Build()
	File_tools_action_proto = out.File
	file_tools_action_proto_rawDesc = nil
	file_tools_action_proto_goTypes = nil
	file_tools_action_proto_depIdxs = nil
}
