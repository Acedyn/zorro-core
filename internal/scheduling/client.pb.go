// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: scheduling/client.proto

package scheduling

import (
	context "github.com/Acedyn/zorro-core/internal/context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientStatus int32

const (
	ClientStatus_STARTING       ClientStatus = 0 // The program is starting
	ClientStatus_IDLE           ClientStatus = 1 // The program is running but not executing any commands
	ClientStatus_PROCESSING     ClientStatus = 2 // The program is running and executing commands
	ClientStatus_SHUTTING_DOWN  ClientStatus = 3 // The program received a shutting down command
	ClientStatus_SHUT_DOWN      ClientStatus = 4 // The program is now off
	ClientStatus_NOT_RESPONDING ClientStatus = 5 // No ping received from the client for a certain amound of time
)

// Enum value maps for ClientStatus.
var (
	ClientStatus_name = map[int32]string{
		0: "STARTING",
		1: "IDLE",
		2: "PROCESSING",
		3: "SHUTTING_DOWN",
		4: "SHUT_DOWN",
		5: "NOT_RESPONDING",
	}
	ClientStatus_value = map[string]int32{
		"STARTING":       0,
		"IDLE":           1,
		"PROCESSING":     2,
		"SHUTTING_DOWN":  3,
		"SHUT_DOWN":      4,
		"NOT_RESPONDING": 5,
	}
)

func (x ClientStatus) Enum() *ClientStatus {
	p := new(ClientStatus)
	*p = x
	return p
}

func (x ClientStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduling_client_proto_enumTypes[0].Descriptor()
}

func (ClientStatus) Type() protoreflect.EnumType {
	return &file_scheduling_client_proto_enumTypes[0]
}

func (x ClientStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientStatus.Descriptor instead.
func (ClientStatus) EnumDescriptor() ([]byte, []int) {
	return file_scheduling_client_proto_rawDescGZIP(), []int{0}
}

// Filters used to select a client from a client pool
type ClientQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string           `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Pid      *int32            `protobuf:"varint,2,opt,name=pid,proto3,oneof" json:"pid,omitempty"`
	Version  *string           `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Stdout   map[int32]string  `protobuf:"bytes,5,rep,name=stdout,proto3" json:"stdout,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Stderr   map[int32]string  `protobuf:"bytes,6,rep,name=stderr,proto3" json:"stderr,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClientQuery) Reset() {
	*x = ClientQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientQuery) ProtoMessage() {}

func (x *ClientQuery) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientQuery.ProtoReflect.Descriptor instead.
func (*ClientQuery) Descriptor() ([]byte, []int) {
	return file_scheduling_client_proto_rawDescGZIP(), []int{0}
}

func (x *ClientQuery) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ClientQuery) GetPid() int32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *ClientQuery) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ClientQuery) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ClientQuery) GetStdout() map[int32]string {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *ClientQuery) GetStderr() map[int32]string {
	if x != nil {
		return x.Stderr
	}
	return nil
}

// Handle of an instance to a client
type RunningClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The client definition at the origin of this running client
	Client *context.Client `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	// Help knowing at which state is the client
	Status ClientStatus `protobuf:"varint,2,opt,name=status,proto3,enum=zorro.ClientStatus" json:"status,omitempty"`
	// PID of the underlying running process
	Pid int32 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	// Extra data used mainly for filters
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RunningClient) Reset() {
	*x = RunningClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningClient) ProtoMessage() {}

func (x *RunningClient) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningClient.ProtoReflect.Descriptor instead.
func (*RunningClient) Descriptor() ([]byte, []int) {
	return file_scheduling_client_proto_rawDescGZIP(), []int{1}
}

func (x *RunningClient) GetClient() *context.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *RunningClient) GetStatus() ClientStatus {
	if x != nil {
		return x.Status
	}
	return ClientStatus_STARTING
}

func (x *RunningClient) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RunningClient) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_scheduling_client_proto protoreflect.FileDescriptor

var file_scheduling_client_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x7a, 0x6f, 0x72, 0x72, 0x6f,
	0x1a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x03, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x6f,
	0x72, 0x72, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x53,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x7a,
	0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x7a, 0x6f, 0x72, 0x72, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x6c, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x48, 0x55, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57,
	0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x48, 0x55, 0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x63, 0x65, 0x64, 0x79, 0x6e, 0x2f, 0x7a, 0x6f, 0x72, 0x72,
	0x6f, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_scheduling_client_proto_rawDescOnce sync.Once
	file_scheduling_client_proto_rawDescData = file_scheduling_client_proto_rawDesc
)

func file_scheduling_client_proto_rawDescGZIP() []byte {
	file_scheduling_client_proto_rawDescOnce.Do(func() {
		file_scheduling_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_scheduling_client_proto_rawDescData)
	})
	return file_scheduling_client_proto_rawDescData
}

var file_scheduling_client_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scheduling_client_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_scheduling_client_proto_goTypes = []interface{}{
	(ClientStatus)(0),      // 0: zorro.ClientStatus
	(*ClientQuery)(nil),    // 1: zorro.ClientQuery
	(*RunningClient)(nil),  // 2: zorro.RunningClient
	nil,                    // 3: zorro.ClientQuery.MetadataEntry
	nil,                    // 4: zorro.ClientQuery.StdoutEntry
	nil,                    // 5: zorro.ClientQuery.StderrEntry
	nil,                    // 6: zorro.RunningClient.MetadataEntry
	(*context.Client)(nil), // 7: zorro.Client
}
var file_scheduling_client_proto_depIdxs = []int32{
	3, // 0: zorro.ClientQuery.metadata:type_name -> zorro.ClientQuery.MetadataEntry
	4, // 1: zorro.ClientQuery.stdout:type_name -> zorro.ClientQuery.StdoutEntry
	5, // 2: zorro.ClientQuery.stderr:type_name -> zorro.ClientQuery.StderrEntry
	7, // 3: zorro.RunningClient.client:type_name -> zorro.Client
	0, // 4: zorro.RunningClient.status:type_name -> zorro.ClientStatus
	6, // 5: zorro.RunningClient.metadata:type_name -> zorro.RunningClient.MetadataEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_scheduling_client_proto_init() }
func file_scheduling_client_proto_init() {
	if File_scheduling_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scheduling_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_scheduling_client_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scheduling_client_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scheduling_client_proto_goTypes,
		DependencyIndexes: file_scheduling_client_proto_depIdxs,
		EnumInfos:         file_scheduling_client_proto_enumTypes,
		MessageInfos:      file_scheduling_client_proto_msgTypes,
	}.Build()
	File_scheduling_client_proto = out.File
	file_scheduling_client_proto_rawDesc = nil
	file_scheduling_client_proto_goTypes = nil
	file_scheduling_client_proto_depIdxs = nil
}
