# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from zorro_core.network.protos import command_pb2 as zorro__core_dot_network_dot_protos_dot_command__pb2
from zorro_core.network.protos import scheduler_service_pb2 as zorro__core_dot_network_dot_protos_dot_scheduler__service__pb2


class CommandSchedulingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCommand = channel.unary_unary(
                '/zorro.CommandScheduling/GetCommand',
                request_serializer=zorro__core_dot_network_dot_protos_dot_scheduler__service__pb2.ID.SerializeToString,
                response_deserializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandRequest.FromString,
                )
        self.GetCommandRequests = channel.unary_stream(
                '/zorro.CommandScheduling/GetCommandRequests',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandRequest.FromString,
                )
        self.GetAndSendCommandUpdates = channel.stream_stream(
                '/zorro.CommandScheduling/GetAndSendCommandUpdates',
                request_serializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandUpdate.SerializeToString,
                response_deserializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandUpdate.FromString,
                )


class CommandSchedulingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCommandRequests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAndSendCommandUpdates(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommandSchedulingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommand,
                    request_deserializer=zorro__core_dot_network_dot_protos_dot_scheduler__service__pb2.ID.FromString,
                    response_serializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandRequest.SerializeToString,
            ),
            'GetCommandRequests': grpc.unary_stream_rpc_method_handler(
                    servicer.GetCommandRequests,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandRequest.SerializeToString,
            ),
            'GetAndSendCommandUpdates': grpc.stream_stream_rpc_method_handler(
                    servicer.GetAndSendCommandUpdates,
                    request_deserializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandUpdate.FromString,
                    response_serializer=zorro__core_dot_network_dot_protos_dot_command__pb2.CommandUpdate.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zorro.CommandScheduling', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CommandScheduling(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zorro.CommandScheduling/GetCommand',
            zorro__core_dot_network_dot_protos_dot_scheduler__service__pb2.ID.SerializeToString,
            zorro__core_dot_network_dot_protos_dot_command__pb2.CommandRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCommandRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/zorro.CommandScheduling/GetCommandRequests',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            zorro__core_dot_network_dot_protos_dot_command__pb2.CommandRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAndSendCommandUpdates(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/zorro.CommandScheduling/GetAndSendCommandUpdates',
            zorro__core_dot_network_dot_protos_dot_command__pb2.CommandUpdate.SerializeToString,
            zorro__core_dot_network_dot_protos_dot_command__pb2.CommandUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
